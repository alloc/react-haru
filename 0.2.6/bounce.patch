From 4d8ebcd6d3ee6e07f506ebc23441903051a9b3e1 Mon Sep 17 00:00:00 2001
From: Alec Larson <1925840+aleclarson@users.noreply.github.com>
Date: Sun, 28 Mar 2021 18:23:57 -0400
Subject: [PATCH] revert: bounce

---
 react-haru.d.ts | 16 ++++++++--------
 react-haru.mjs  | 28 ++++++++++++++--------------
 2 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/react-haru.d.ts b/react-haru.d.ts
index e563c71..7d07457 100644
--- a/react-haru.d.ts
+++ b/react-haru.d.ts
@@ -587,14 +587,14 @@ interface AnimationConfig {
      * Avoid overshooting by ending abruptly at the goal value.
      */
     clamp?: boolean;
-    /**
-     * When above zero, the spring will bounce instead of overshooting when
-     * exceeding its goal value. Its velocity is multiplied by `-1 + bounce`
-     * whenever its current value equals or exceeds its goal. For example,
-     * setting `bounce` to `0.5` chops the velocity in half on each bounce,
-     * in addition to any friction.
-     */
-    bounce?: number;
+
+
+
+
+
+
+
+
     /**
      * "Decay animations" decelerate without an explicit goal value.
      * Useful for scrolling animations.
diff --git a/react-haru.mjs b/react-haru.mjs
index 758bc4c..ddcaf0e 100644
--- a/react-haru.mjs
+++ b/react-haru.mjs
@@ -2954,17 +2954,17 @@ class SpringValue extends FrameValue {
           ));
           const restVelocity = config.restVelocity 
             ?? precision / 10;
-          const bounceFactor = config.clamp 
-            ? 0 
-            : config.bounce;
-          const canBounce = is.defined(
-            bounceFactor
-          );
+
+
+
+
+
+
           const isGrowing = from == to 
             ? node2.v0 > 0 
             : from < to;
           let isMoving;
-          let isBouncing = false;
+
           const step = 1;
           const numSteps = Math.ceil(
             dt / step
@@ -2981,13 +2981,13 @@ class SpringValue extends FrameValue {
                 break;
               }
             }
-            if (canBounce) {
-              isBouncing = position == to 
-                || position > to == isGrowing;
-              if (isBouncing) {
-                velocity = -velocity * bounceFactor;
-                position = to;
-              }
+            if (config.clamp && (position == to || position > to == isGrowing)) {
+
+
+
+                velocity = 0;
+                position = to; break;
+
             }
             const springForce = -config.tension * 1e-6 * (position - to);
             const dampingForce = -config.friction * 1e-3 * velocity;
-- 
2.19.2